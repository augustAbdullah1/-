name: 🕌 Build and Deploy Islamic App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

jobs:
  # وظيفة بناء PWA ونشرها على GitHub Pages
  build-and-deploy-pwa:
    name: 📱 Build PWA and Deploy to GitHub Pages
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: ⚙️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: |
        npm install
        
    - name: 🏗️ Build PWA
      run: |
        npm run build
        
    - name: 🚀 Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./
        exclude_assets: '.github,node_modules,android,ios,*.md,package*.json,capacitor.config.ts,build-apk.sh'

  # وظيفة بناء APK للأندرويد
  build-android-apk:
    name: 🤖 Build Android APK
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: ⚙️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: ☕ Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: 📦 Install Dependencies
      run: |
        npm install
        
    - name: 🤖 Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: 🔧 Add Capacitor Android Platform
      run: |
        npx cap add android
        npx cap sync android
        
    - name: 🏗️ Build Android APK
      working-directory: ./android
      run: |
        chmod +x ./gradlew
        ./gradlew assembleDebug
        
    - name: 📁 Prepare APK for Upload
      run: |
        mkdir -p dist/
        cp android/app/build/outputs/apk/debug/app-debug.apk dist/islamic-app-v${{ github.event.release.tag_name }}.apk
        
    - name: 📤 Upload APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/islamic-app-v${{ github.event.release.tag_name }}.apk
        asset_name: islamic-app-v${{ github.event.release.tag_name }}.apk
        asset_content_type: application/vnd.android.package-archive

  # وظيفة اختبار جودة الكود
  quality-check:
    name: 🔍 Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: ⚙️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: 📦 Install Dependencies
      run: |
        npm install
        
    - name: 🧪 Run Tests (if available)
      run: |
        npm test --if-present
        
    - name: 📊 Check Bundle Size
      run: |
        echo "Checking file sizes..."
        find . -name "*.html" -o -name "*.css" -o -name "*.js" | head -10 | xargs ls -lah
        
    - name: ✅ PWA Validation
      run: |
        echo "Validating PWA requirements..."
        test -f manifest.json && echo "✅ manifest.json exists"
        test -f sw.js && echo "✅ Service Worker exists"
        test -f index.html && echo "✅ index.html exists"
        
  # إشعار نجاح البناء
  notify-success:
    name: 🎉 Notify Build Success
    runs-on: ubuntu-latest
    needs: [build-and-deploy-pwa, quality-check]
    if: success()
    
    steps:
    - name: 🎊 Success Notification
      run: |
        echo "🎉 تم بناء ونشر التطبيق الإسلامي بنجاح!"
        echo "🌐 PWA: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
        echo "📱 APK: متوفر في الإصدارات"
        echo "🕌 بارك الله فيك!"